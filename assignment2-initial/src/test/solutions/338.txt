Program([FuncDecl(Id(isPrime), [VarDecl(Id(num), NumberType, None, None)], Block([If((BinaryOp(<=, Id(num), NumLit(1.0)), Return(BooleanLit(False))), [], If((BinaryOp(==, Id(num), NumLit(2.0)), Return(BooleanLit(True))), [], If((BinaryOp(==, BinaryOp(%, Id(num), NumLit(2.0)), NumLit(0.0)), Return(BooleanLit(False))), [], None))), For(Id(i), BinaryOp(<=, BinaryOp(*, Id(i), Id(i)), Id(num)), NumLit(2.0), Block([If((BinaryOp(==, BinaryOp(%, Id(num), Id(i)), NumLit(0.0)), Return(BooleanLit(False))), [], None)])), Return(BooleanLit(True))])), FuncDecl(Id(printNPrimes), [VarDecl(Id(n), NumberType, None, None)], Block([VarDecl(Id(count), None, var, NumLit(0.0)), For(Id(i), BinaryOp(<, Id(count), Id(n)), NumLit(1.0), Block([If((CallExpr(Id(isPrime), [Id(i)]), Block([CallStmt(Id(writeNumber), [Id(i)]), CallStmt(Id(writeString), [StringLit( )]), AssignStmt(Id(count), BinaryOp(+, Id(count), NumLit(1.0)))])), [], None)]))])), FuncDecl(Id(main), [], Block([CallStmt(Id(writeString), [StringLit(Enter the value of n: )]), VarDecl(Id(n), None, var, CallExpr(Id(readNumber), [])), CallStmt(Id(writeString), [StringLit(The first )]), CallStmt(Id(writeNumber), [Id(n)]), CallStmt(Id(writeString), [StringLit( prime numbers are: )]), CallStmt(Id(printNPrimes), [Id(n)])]))])