
            func integer (dynamic arr[100], number begin, number index)
            begin
                if ((index >= n) or (tree[index] == "l"))
                    return 0
                ## calc height of left subtree (In preorder
                ## left subtree is processed before right)
                index <- index+1
                number left  <- findDepthRec(tree, n, index)
                ## calc height of right subtree
                index <- index+1
                number right  <- findDepthRec(tree, n, index)
                return max(left, right) + 1
            end
            func void (dynamic arr[100], number n)
            begin
                number index <- 0
                return findDepthRec(tree, n, index)
            end
        